// Решение предыдущей проблемы - Factory Functions (функция фабрика)

// 2 шаг пути ООП - Factory Functions

// Factory Functions - функции, которые ведут себя как фабрики по производству объектов.


function createElf(name, weapon) {
  return {
    name, // уникально
    weapon, // уникально
    attack() {
      console.log(`${this.name} attacks with ${this.weapon}`); // одинакого для всех объектов эльфов
    }
  }
}

const elfPeter = createElf("Peter", "bow");
elfPeter.attack()

const elfSam = createElf("Sam", "sword");
elfSam.attack()

// ПРОБЛЕМА - память. Если мы создадим например 1000 эльфов, то и общие методы будут созданы 1000 раз и будут занимать память.

// Свойство name, weapon - уникальны для каждого эльфа, и мы обязательно должны их хранить в памяти для каждого эльфа.

// Метод attack - общий (внутренне не отличающийся) для всех эльфов, он дублируется в каждом объекте,
// то есть хранится в разных участках памяти для каждого эльфа.

// Если будут созданы 1000 эльфов, будут созданы и 1000 методов attack, которые будут занимать память,
// не смотря на то, что они все будут абсолютно идентичны